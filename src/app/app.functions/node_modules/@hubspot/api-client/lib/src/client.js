"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Client = void 0;
const AutomationDiscovery_1 = require("./discovery/automation/AutomationDiscovery");
const CmsDiscovery_1 = require("./discovery/cms/CmsDiscovery");
const CommunicationPreferencesDiscovery_1 = require("./discovery/communicationPreferences/CommunicationPreferencesDiscovery");
const ConversationsDiscovery_1 = require("./discovery/conversations/ConversationsDiscovery");
const CrmDiscovery_1 = require("./discovery/crm/CrmDiscovery");
const EventsDiscovery_1 = require("./discovery/events/EventsDiscovery");
const MarketingDiscovery_1 = require("./discovery/marketing/MarketingDiscovery");
const OauthDiscovery_1 = require("./discovery/oauth/OauthDiscovery");
const SettingsDiscovery_1 = require("./discovery/settings/SettingsDiscovery");
const WebhooksDiscovery_1 = require("./discovery/webhooks/WebhooksDiscovery");
const HttpClient_1 = require("./services/http/HttpClient");
const Request_1 = require("./services/http/Request");
class Client {
    constructor(config = {}) {
        this.automation = new AutomationDiscovery_1.AutomationDiscovery();
        this.cms = new CmsDiscovery_1.CmsDiscovery();
        this.communicationPreferences = new CommunicationPreferencesDiscovery_1.CommunicationPreferencesDiscovery();
        this.conversations = new ConversationsDiscovery_1.ConversationsDiscovery();
        this.crm = new CrmDiscovery_1.CrmDiscovery();
        this.events = new EventsDiscovery_1.EventsDiscovery();
        this.marketing = new MarketingDiscovery_1.MarketingDiscovery();
        this.oauth = new OauthDiscovery_1.OauthDiscovery();
        this.settings = new SettingsDiscovery_1.SettingsDiscovery();
        this.webhooks = new WebhooksDiscovery_1.WebhooksDiscovery();
        this.config = config;
        this.init();
    }
    init() {
        this.automation = new AutomationDiscovery_1.AutomationDiscovery(this.config);
        this.cms = new CmsDiscovery_1.CmsDiscovery(this.config);
        this.communicationPreferences = new CommunicationPreferencesDiscovery_1.CommunicationPreferencesDiscovery(this.config);
        this.conversations = new ConversationsDiscovery_1.ConversationsDiscovery(this.config);
        this.crm = new CrmDiscovery_1.CrmDiscovery(this.config);
        this.events = new EventsDiscovery_1.EventsDiscovery(this.config);
        this.marketing = new MarketingDiscovery_1.MarketingDiscovery(this.config);
        this.oauth = new OauthDiscovery_1.OauthDiscovery(this.config);
        this.settings = new SettingsDiscovery_1.SettingsDiscovery(this.config);
        this.webhooks = new WebhooksDiscovery_1.WebhooksDiscovery(this.config);
    }
    setAccessToken(token) {
        this.config.accessToken = token;
        this.init();
    }
    setApiKey(apiKey) {
        this.config.apiKey = apiKey;
        this.init();
    }
    setDeveloperApiKey(developerApiKey) {
        this.config.developerApiKey = developerApiKey;
        this.init();
    }
    apiRequest(opts = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const request = new Request_1.Request(this.config, opts);
            return yield HttpClient_1.HttpClient.send(request);
        });
    }
}
exports.Client = Client;
//# sourceMappingURL=client.js.map